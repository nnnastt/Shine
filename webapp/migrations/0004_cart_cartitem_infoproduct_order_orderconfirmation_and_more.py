# Generated by Django 5.2.1 on 2025-05-09 20:34

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('webapp', '0003_mymodel_delete_typeproduct'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cart', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Корзина',
                'verbose_name_plural': 'Корзины',
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Количество')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='webapp.cart', verbose_name='Корзина')),
            ],
            options={
                'verbose_name': 'Элемент корзины',
                'verbose_name_plural': 'Элементы корзины',
                'ordering': ['-added_at'],
            },
        ),
        migrations.CreateModel(
            name='InfoProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('info', models.TextField(verbose_name='Описание')),
                ('color', models.CharField(blank=True, max_length=50, verbose_name='Цвет')),
                ('size', models.CharField(blank=True, max_length=20, verbose_name='Размер')),
                ('weight', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Вес (кг)')),
                ('material', models.CharField(blank=True, max_length=100, verbose_name='Материал')),
                ('old_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Старая цена')),
                ('discount', models.PositiveIntegerField(default=0, verbose_name='Скидка (%)')),
            ],
            options={
                'verbose_name': 'Товар (детали)',
                'verbose_name_plural': 'Товары (детали)',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('order_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата заказа')),
                ('status', models.CharField(choices=[('pending', 'В обработке'), ('processing', 'В процессе'), ('shipped', 'Отправлен'), ('delivered', 'Доставлен'), ('cancelled', 'Отменен'), ('returned', 'Возвращен')], default='pending', max_length=20, verbose_name='Статус заказа')),
                ('payment_status', models.CharField(choices=[('pending', 'Ожидает оплаты'), ('paid', 'Оплачен'), ('failed', 'Ошибка оплаты'), ('refunded', 'Возврат средств')], default='pending', max_length=20, verbose_name='Статус оплаты')),
                ('delivery_date', models.DateField(blank=True, null=True, verbose_name='Дата доставки')),
                ('delivery_time', models.CharField(blank=True, max_length=50, null=True, verbose_name='Время доставки')),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Сумма товаров')),
                ('shipping_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Стоимость доставки')),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Скидка')),
                ('total', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Итоговая сумма')),
                ('email', models.EmailField(max_length=254, verbose_name='Email для заказа')),
                ('phone', models.CharField(max_length=20, verbose_name='Телефон для заказа')),
                ('notes', models.TextField(blank=True, verbose_name='Примечания к заказу')),
                ('tracking_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Трек-номер')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'ordering': ['-order_date'],
            },
        ),
        migrations.CreateModel(
            name='OrderConfirmation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirmation_number', models.CharField(max_length=50, unique=True)),
                ('confirmed_at', models.DateTimeField(auto_now_add=True)),
                ('email_sent', models.BooleanField(default=False)),
                ('email_sent_at', models.DateTimeField(blank=True, null=True)),
                ('email_content', models.TextField(blank=True, verbose_name='Содержание письма')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='confirmation', to='webapp.order')),
            ],
            options={
                'verbose_name': 'Подтверждение заказа',
                'verbose_name_plural': 'Подтверждения заказов',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Количество')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('discount', models.PositiveIntegerField(default=0, verbose_name='Скидка (%)')),
                ('discounted_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена со скидкой')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='webapp.order')),
            ],
            options={
                'verbose_name': 'Элемент заказа',
                'verbose_name_plural': 'Элементы заказа',
            },
        ),
        migrations.CreateModel(
            name='PaymentCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_holder', models.CharField(max_length=100, verbose_name='Владелец карты')),
                ('card_number', models.CharField(max_length=16, verbose_name='Номер карты')),
                ('expiry_month', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='Месяц окончания')),
                ('expiry_year', models.PositiveIntegerField(verbose_name='Год окончания')),
                ('cvv', models.CharField(max_length=4, verbose_name='CVV код')),
                ('is_default', models.BooleanField(default=False, verbose_name='Основная карта')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('card_type', models.CharField(choices=[('visa', 'Visa'), ('mastercard', 'MasterCard'), ('mir', 'Мир'), ('other', 'Другая')], default='visa', max_length=20, verbose_name='Тип карты')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cards', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Платежная карта',
                'verbose_name_plural': 'Платежные карты',
                'ordering': ['-is_default', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Заголовок секции', max_length=100)),
                ('content', models.TextField(default='Содержание')),
            ],
            options={
                'verbose_name': 'Детальная информация',
                'verbose_name_plural': 'Детальная информация',
            },
        ),
        migrations.CreateModel(
            name='ProductWarning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Предупреждение', max_length=100)),
                ('content', models.TextField(default='Текст предупреждения')),
            ],
            options={
                'verbose_name': 'Предупреждение',
                'verbose_name_plural': 'Предупреждения',
            },
        ),
        migrations.CreateModel(
            name='TypeProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='webapp/static/pic/type')),
                ('name', models.CharField(max_length=200, verbose_name='Наименование категории')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='URL')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок сортировки')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_line1', models.CharField(max_length=255, verbose_name='Улица, дом, квартира')),
                ('address_line2', models.CharField(blank=True, max_length=255, verbose_name='Дополнительная информация')),
                ('city', models.CharField(max_length=100, verbose_name='Город')),
                ('postal_code', models.CharField(max_length=20, verbose_name='Почтовый индекс')),
                ('country', models.CharField(default='Россия', max_length=100, verbose_name='Страна')),
                ('is_default', models.BooleanField(default=False, verbose_name='Основной адрес')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Адрес пользователя',
                'verbose_name_plural': 'Адреса пользователей',
                'ordering': ['-is_default', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Избранное',
                'verbose_name_plural': 'Избранные',
            },
        ),
        migrations.CreateModel(
            name='WishlistItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Элемент избранного',
                'verbose_name_plural': 'Элементы избранного',
            },
        ),
        migrations.DeleteModel(
            name='MyModel',
        ),
        migrations.AlterModelOptions(
            name='userinfo',
            options={'verbose_name': 'Профиль пользователя', 'verbose_name_plural': 'Профили пользователей'},
        ),
        migrations.AlterModelOptions(
            name='viewproduct',
            options={'ordering': ['-created_at'], 'verbose_name': 'Товар (список)', 'verbose_name_plural': 'Товары (список)'},
        ),
        migrations.RemoveField(
            model_name='userinfo',
            name='fio',
        ),
        migrations.AddField(
            model_name='userinfo',
            name='avatar',
            field=models.ImageField(blank=True, default=None, upload_to='webapp/static/pic/avatar', verbose_name='Фото профиля'),
        ),
        migrations.AddField(
            model_name='userinfo',
            name='birth_date',
            field=models.DateField(blank=True, null=True, verbose_name='Дата рождения'),
        ),
        migrations.AddField(
            model_name='userinfo',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='userinfo',
            name='first_name',
            field=models.CharField(blank=True, max_length=100, verbose_name='Имя'),
        ),
        migrations.AddField(
            model_name='userinfo',
            name='last_name',
            field=models.CharField(blank=True, max_length=100, verbose_name='Фамилия'),
        ),
        migrations.AddField(
            model_name='userinfo',
            name='middle_name',
            field=models.CharField(blank=True, max_length=100, verbose_name='Отчество'),
        ),
        migrations.AddField(
            model_name='userinfo',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='viewproduct',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='viewproduct',
            name='is_active',
            field=models.BooleanField(db_index=True, default=True, verbose_name='Активен'),
        ),
        migrations.AddField(
            model_name='viewproduct',
            name='slug',
            field=models.SlugField(default=2, max_length=200, unique=True, verbose_name='URL'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='viewproduct',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='userinfo',
            name='phone',
            field=models.CharField(blank=True, max_length=20, verbose_name='Телефон'),
        ),
        migrations.AlterField(
            model_name='userinfo',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='viewproduct',
            name='name_product',
            field=models.CharField(max_length=200, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='viewproduct',
            name='price',
            field=models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена'),
        ),
        migrations.AlterField(
            model_name='viewproduct',
            name='product',
            field=models.ImageField(upload_to='webapp/static/pic/product', verbose_name='Изображение товара'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.viewproduct', verbose_name='Товар'),
        ),
        migrations.AddField(
            model_name='infoproduct',
            name='view_product',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='detailed_info', to='webapp.viewproduct', verbose_name='Товар'),
        ),
        migrations.AddField(
            model_name='orderitem',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='webapp.viewproduct', verbose_name='Товар'),
        ),
        migrations.AddField(
            model_name='order',
            name='payment_card',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='webapp.paymentcard'),
        ),
        migrations.AddField(
            model_name='productdetail',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='webapp.infoproduct'),
        ),
        migrations.AddField(
            model_name='productwarning',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='warnings', to='webapp.infoproduct'),
        ),
        migrations.AddField(
            model_name='viewproduct',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='view_products', to='webapp.typeproduct', verbose_name='Категория'),
        ),
        migrations.AddIndex(
            model_name='viewproduct',
            index=models.Index(fields=['is_active'], name='webapp_view_is_acti_3858e5_idx'),
        ),
        migrations.AddField(
            model_name='useraddress',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='order',
            name='billing_address',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='billing_orders', to='webapp.useraddress'),
        ),
        migrations.AddField(
            model_name='order',
            name='shipping_address',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shipping_orders', to='webapp.useraddress'),
        ),
        migrations.AddField(
            model_name='wishlist',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wishlist', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='wishlistitem',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.viewproduct', verbose_name='Товар'),
        ),
        migrations.AddField(
            model_name='wishlistitem',
            name='wishlist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='webapp.wishlist', verbose_name='Список избранного'),
        ),
        migrations.AlterUniqueTogether(
            name='cartitem',
            unique_together={('cart', 'product')},
        ),
        migrations.AlterUniqueTogether(
            name='wishlistitem',
            unique_together={('wishlist', 'product')},
        ),
    ]
